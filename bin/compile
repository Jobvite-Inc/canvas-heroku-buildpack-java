#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
. $BP_DIR/lib/common.sh
. $BP_DIR/lib/maven.sh

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java
. /tmp/jvm-common/opt/jdbc.sh
install_java_with_overlay ${BUILD_DIR}

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# CUSTOMIZED HERE
set -x
echo "inserting build source version into all application.property files...";
files=$(find $BUILD_DIR -name application.properties | grep -v target/);
for f in $files; do
	echo "updating $f";
	echo "
info.app.githash=$SOURCE_VERSION
" >> $f
done;
set +x

run_mvn "compile" $BUILD_DIR $CACHE_DIR

if has_maven_wrapper $BUILD_DIR; then
  cache_copy ".m2/wrapper" $BUILD_DIR $CACHE_DIR
  rm -rf $BUILD_DIR/.m2
fi

# cleanup things we don't care about after build
echo "Starting custom cleanup steps"
set -x
# switch to canvasapp directory to do cleanup
old_dir=$PWD
cd $BUILD_DIR/canvasapp;
rm_file=./remove-after-build.txt

if [ -f "$rm_file" ]; then
	for f in $(cat $rm_file); do
		p="./$f"

		if [ "$p" != "./" ]; then
			if [ -e "$p" ]; then
			    echo "Removing [$p]"
			    rm -rf "$p"
			fi;
		fi;
	done;
fi;

# download newrelic java agent
echo "Downloading newrelic agent jar";
nrd=./newrelic
mkdir -p $nrd
wget -q http://download.newrelic.com/newrelic/java-agent/newrelic-agent/3.36.0/newrelic-agent-3.36.0.jar -O $nrd/newrelic.jar 
echo ".. done with newrelic agent jar";


# back to the proper parent
cd $old_dir
set +x
